package com.customer.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

@RunWith(SpringRunner.class)
@WebMvcTest(CustomerController.class)
@SpringBootTest
public class CustomersApplicationTests {

	@Autowired
	private MockMvc mvc;
	
	@MockBean
	private CustomerController customerController;
	
	@Test
	public void customerTest() {
		Customer customer = new Customer();
		customer.setAddressLine1("qwerty road");
		customer.setAddressLine2("polo");
		customer.setAge(23);
		customer.setPostCode(123654);
		
		Mockito.when(
				customerController.addCustomer(Mockito.anyString(),
						Mockito.any(Customer.class))).thenReturn(customer);

		// Send course as body to /students/Student1/courses
		RequestBuilder requestBuilder = MockMvcRequestBuilders
				.post("/students/Student1/courses")
				.accept(MediaType.APPLICATION_JSON).content(exampleCourseJson)
				.contentType(MediaType.APPLICATION_JSON);

		MvcResult result = mockMvc.perform(requestBuilder).andReturn();

		MockHttpServletResponse response = result.getResponse();

		assertEquals(HttpStatus.CREATED.value(), response.getStatus());

		assertEquals("http://localhost/students/Student1/courses/1",
				response.getHeader(HttpHeaders.LOCATION));
		
	}

}
